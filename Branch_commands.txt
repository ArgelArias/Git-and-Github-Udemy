#view the branches, * on the current branch
git branch

#view the branches with more detail
git branch -v

#create a new branch based on the current HEAD
#branch name should not include spaces
git branch <branch-name>

#switch the current branch, (it also works for branches on the remote)
git switch <branch-name>

#create and switch branch on the same command
git switch -c <branch-name>

#delete a branch, you cannot be in the branch to delete
git branch -d <branch-name>

#force delete a branch, HEAD cannot be in the branch to delete
git branch -D <branch-name>

#rename a branch, HEAD must be in the branch
git branch -m <new-branch-name>

#list the branches on the remote
git branch -r

-----------------CHECKOUT----------------------
#switch the current branch, old school way
git checkout <branch-name>

#create and switch branch on the same command, old school way
git checkout -b <branch-name>

#track a branch to a branch on the remote THIS IS THE HARD WAY!!! switch already do it easy
git checkout --track origin/puppies
